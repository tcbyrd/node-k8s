# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - getStartedApp059f5af2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  trigger-deployment:
    runs-on: 'ubuntu-latest'
    outputs:
      deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
    steps:
      - name: Create Deployment
        id: create_deployment
        run: |
          echo "::set-output name=deployment_id::$(gh api repos/tcbyrd/tcbyrd.dev/deployments -f ref=abcb18f2ac0f05983497294c7d21148a3d86144b -q .id)"

  build-and-deploy:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@master

    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - run: |
        docker build . -t ghcr.io/${{ github.repository }}:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'getStartedApp059f5af2'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_6bf2406506304421801173ebf52af134 }}
        images: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'

  verify-deployment:
    needs: [build-and-deploy, trigger-deployment]
    runs-on:  'ubuntu-latest'
    
    steps:
    - name: Wait for current version
      run: |
        response=$(curl -s https://getstartedapp059f5af2.azurewebsites.net/.github/version)

        echo "Current version: '$response'"
        while [ "$response" != '${{ github.sha }}' ]
        do
            response=$(curl -s https://getstartedapp059f5af2.azurewebsites.net/.github/version)
            echo "response: '$response'"
            sleep 1s
        done

        echo "deployment is done"
      timeout-minutes: 1
    - name: Update deployment environment
      run: gh api repos/${{ github.respository }}/deployments/${{ needs.trigger-deployment.outputs.deployment_id }}/statuses -f state=success -f environment_url='https://getstartedapp059f5af2.azurewebsites.net/'
    
