name: Deploy to Web App

on:
  workflow_dispatch:

jobs:
  trigger-deployment:
    runs-on: 'ubuntu-latest'
    outputs:
      deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
    steps:
      - name: Create Deployment
        id: create_deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DEPLOYMENT_ID=$(gh api repos/${{ github.repository }}/deployments -f ref=${{ github.sha }} -q .id) &&
          gh api repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses \
          -f state=pending -f log_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          echo "::set-output name=deployment_id::$DEPLOYMENT_ID"
  deploy:
    needs: [trigger-deployment]
    runs-on: 'ubuntu-latest'
    steps:
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'getStartedApp059f5af2'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_6bf2406506304421801173ebf52af134 }}
        images: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'

  verify-deployment:
    needs: [deploy, trigger-deployment]
    runs-on:  'ubuntu-latest'
    
    steps:
    - name: Wait for current version
      run: |
        response=$(curl -s https://getstartedapp059f5af2.azurewebsites.net/.github/version)

        echo "Current version: '$response'"
        while [ "$response" != '${{ github.sha }}' ]
        do
            response=$(curl -s https://getstartedapp059f5af2.azurewebsites.net/.github/version)
            echo "response: '$response'"
            sleep 1s
        done

        echo "deployment is done"
      timeout-minutes: 1
    - name: Update deployment environment
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh api repos/${{ github.repository }}/deployments/${{ needs.trigger-deployment.outputs.deployment_id }}/statuses -f state=success -f environment_url='https://getstartedapp059f5af2.azurewebsites.net/'
    
